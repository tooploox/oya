# -*- mode: yaml -*-
Project: project
Require:
  github.com/tooploox/oya-packs/innosetup: v0.0.1
  github.com/tooploox/oya-fixtures: v1.1.0

Values:
  pgpkey: 317D 6971 DD80 4501 A6B8  65B9 0F1F D46E 2E8C 7202

Ignore:
- pkg/*

develop.Doc: Install development prerequisites.
develop: |
  go get -u github.com/DATA-DOG/godog/cmd/godog
  go get -u go.mozilla.org/sops/cmd/sops

install.Doc: Install oya.
install: |
  go install .

test.Doc: Run tests.
test: |
  set -e
  go test -v ./... && \
  godog $@

test.Doc: Run installer tests.
testInstaller: |
  cd install/test/
  ./runTests.sh

testKeysImport.Doc: Imports test PGP keys required by sops.
testKeysImport: |
  if ! [[ -n $(gpg --fingerprint | grep '${Oya[pgpkey]}') ]]
  then
    gpg --import testutil/pgp/private.rsa

    echo "Oya test PGP Key imported"
  fi

testKeysRemove.Doc: Removes test PGP keys.
testKeysRemove: |
  if [[ -n $(gpg --fingerprint | grep '${Oya[pgpkey]}') ]]
  then
    gpg --batch --delete-secret-keys '${Oya[pgpkey]}'
    gpg --batch --delete-keys '${Oya[pgpkey]}'

    echo "Oya test PGP Key deleted"
  fi

lint.Doc: Lint files
lint: |
  set -e
  ./node_modules/.bin/remark -f .

lintFix.Doc: Lint files and apply fixes where possible
lintFix: |
  ./node_modules/.bin/remark . -o

release: |
  go get -u github.com/mitchellh/gox
  go get -u github.com/tcnksm/ghr
  gox -os="linux darwin" -arch="amd64 386" -output="dist/oya_${CIRCLE_TAG}_{{.OS}}_{{.Arch}}" -ldflags="-X main.buildVersion=${CIRCLE_TAG}"
  # Is's seperated because Windows compilation failes when bulding two arch parallel.
  gox -os="windows" -arch="amd64" -output="dist/oya_${CIRCLE_TAG}_{{.OS}}_{{.Arch}}" -ldflags="-X main.buildVersion=${CIRCLE_TAG}"
  gox -os="windows" -arch="386" -output="dist/oya_${CIRCLE_TAG}_{{.OS}}_{{.Arch}}" -ldflags="-X main.buildVersion=${CIRCLE_TAG}"
  find ./dist -type f ! -name "*.exe" -exec gzip {} \;
  find ./dist -type f -name "*.exe" -execdir zip {}.zip {} \;
  find ./dist -type f -name "*.exe" -exec rm {} \;
  sha256sum dist/oya_${CIRCLE_TAG}_{darwin,linux,windows}_* | tee dist/oya_${CIRCLE_TAG}_SHA256SUMS
  if [ "$CIRCLE_TAG" ]; then
    ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace $CIRCLE_TAG dist/
  else
    echo "The build is missing Git / CircleCi Tag"
  fi
