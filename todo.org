* DONE Sharing Values
  CLOSED: [2018-11-12 Mon 14:10]
** Import via modules
 /Oyafile
 /oya.mod
    github.com/Tooploox/pledge

 Import:
    main: github.com/Tooploox/pledge
** Same but Oyafile contains Project:
** Simple directory-level inheritance
* DONE CLI init + run
  CLOSED: [2018-11-12 Mon 18:44]
* DONE Ignore Oyafiles under oya/vendor
  CLOSED: [2018-11-13 Tue 23:49]
* DONE Try to implement minimal/fake Docker pack
  CLOSED: [2018-11-15 Thu 00:58]
* DONE Render directories
  CLOSED: [2018-11-16 Fri 00:29]
* DONE templatized paths
  CLOSED: [2018-11-17 Sat 18:31]
* DONE Arguments to go run -- pass to task
  CLOSED: [2019-01-21 Mon 23:50]
  oya build -- --flag=5
  $Flags -- map
  $Args -- positional arguments
* DONE Refactor
  CLOSED: [2019-01-24 Thu 22:31]
** DONE Use cobra commands in tests
   CLOSED: [2018-11-18 Sun 18:06]
** DONE Tests for existing functionality
   CLOSED: [2018-11-18 Sun 18:06]
** DONE Rendering -> pkg
   CLOSED: [2018-11-18 Sun 18:06]
** DONE task -> task
   CLOSED: [2018-11-19 Mon 23:12]
** DONE Report missing variables (Template.Strict)
   CLOSED: [2018-11-19 Mon 23:27]
** DONE Package > pack everywhere? Or name it "package" in docs?
   CLOSED: [2018-11-19 Mon 23:34]
** DONE Cleanup Modules/packs => Project
   CLOSED: [2018-11-19 Mon 23:50]
** DONE Exclude modules inside the current module when running oya run
   CLOSED: [2018-11-20 Tue 00:22]
** DONE .oyaignore
   CLOSED: [2018-12-08 Sat 17:22]
    Exclude sub-directiories -- have to be built by cd'ing and running oya.
 https://godoc.org/k8s.io/helm/pkg/ignore
** DONE Automate Oya testing using Oya + CircleCI
   CLOSED: [2018-12-08 Sat 17:32]
* DONE Arguments to go run -- pass to task
  CLOSED: [2019-01-20 Sun 17:52]
  oya run build -- --flag=5
  $Flags -- map
  $Args -- positional arguments
* CANCELLED Install task for packages                             :CANCELLED:
  CLOSED: [2019-01-25 Fri 10:34]
  :LOGBOOK:
  - State "CANCELLED"  from "TODO"       [2019-01-25 Fri 10:34] \\
    It's enough to have "install" task by convention in packs and then oya tasks will show it.
  :END:
* DONE Experiment: exposing tasks
** DONE PoC
** DONE Flag for go import
** DONE Multiple packages?
Not for now.
** DONE Better handling by oya tasks
*** DONE Show global tasks first
*** DONE Group aliased tasks
*** DONE Show global tasks pointing to exposed tasks
Use Meta.OriginalTaskName
**** DONE Add to .feature
**** DONE Add to tasks_test.go

** DONE Transient exposure (package exposing another package)
* TODO Vendoring is only partially implemented
** TODO Simplify oya get/vendor (based on Import statements) TBD
**** Just use Import
**** oya get -- adds to packages.lock if not there
**** oya get -- adds to packages.lock if not there
**** oya records new imports using sha in packages.lock
**** oya get -u <uri> updates package sha in packages.lock and fetches it
**** oya get -u <uri> updates package sha in packages.lock and fetches it
*** Require imported project to have correct Project + remove skipping dirs under vendor from oyafile.List
*** Rest of CLI, cleanup, messages
*** Bring README up to date
* TODO Test REPL
* Require imported project to have correct Project + remove skipping dirs under vendor from oyafile.List
* Rest of CLI, cleanup, messages
* NEXT Automate Neutron deploy using Oya
** TODO On push to branch, build & upload docker with sha tag
** TODO On merge to master, build & upload docker with release tag
** TODO On push to any branch, run tests
** TODO On merge to master, deploy to cluster if deployment dir changed
* TODO Secrets
* TODO Docker pack, no language autodetect, Python + Go
* .kasia plugin based on extension or way to specify templating language
* Consider dropping run
  oya run init --> oya Init
  ~/.oya/Oyafile -- oyafile imported by all Oyafiles, contains built-in tasks(implicitly), customization point (can import, can add before/after tasks etc.)
** oya -T --tasks list available tasks
* .Values.EarlyTerminate (default: true)
   Set to false to avoid terminating on first error
* Fail for incorrect changeset paths
** Absolute path
** Non-existent path
** Path without Oyafile
https://godoc.org/k8s.io/helm/pkg/ignore
* Support template types as plugins (.kasia)
